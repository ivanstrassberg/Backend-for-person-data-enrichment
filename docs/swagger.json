{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/people": {
            "get": {
                "description": "Получить пагинированный список людей с возможностью фильтрации по различным параметрам",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "people"
                ],
                "summary": "Список людей с фильтрацией и пагинацией",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Фильтрация по имени (частичное совпадение)",
                        "name": "fname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Фильтрация по фамилии (частичное совпадение)",
                        "name": "surname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Фильтрация по отчество",
                        "name": "patronymic",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Фильтрация по возрасту",
                        "name": "age",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Фильтрация по национальности",
                        "name": "nationality",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Фильтрация по полу",
                        "name": "gender",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Номер страницы (по умолчанию: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Количество записей на странице (по умолчанию: 10)",
                        "name": "entries",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.PaginatedFilteredResults"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiError"
                        }
                    }
                }
            },
            "post": {
                "description": "Создание новой записи о человеке с автоматическим обогащением данных из внешних API",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "people"
                ],
                "summary": "Создание нового человека с обогащением данных",
                "parameters": [
                    {
                        "description": "Данные о человеке",
                        "name": "person",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PersonReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiError"
                        }
                    }
                }
            }
        },
        "/people/enrich/{id}": {
            "put": {
                "description": "Обновление записи о человеке с возможным обогащением данных в случае изменения имени",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "people"
                ],
                "summary": "Обновление данных человека с обогащением",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID человека",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные о человеке",
                        "name": "person",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PersonReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiError"
                        }
                    }
                }
            }
        },
        "/people/{id}": {
            "delete": {
                "description": "Удаление записи о человеке по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "people"
                ],
                "summary": "Удаление человека",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID человека",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiError"
                        }
                    }
                }
            },
            "patch": {
                "description": "Частичное обновление записи о человеке (без обогащения данных)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "people"
                ],
                "summary": "Обновление данных человека без обогащения",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID человека",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Частичные данные человека",
                        "name": "person",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PersonEnriched"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.ApiError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "error message"
                }
            }
        },
        "api.PaginatedFilteredResults": {
            "type": "object",
            "properties": {
                "entries_per_page": {
                    "type": "integer"
                },
                "entries_total": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "pages_total": {
                    "type": "integer"
                },
                "people": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.Person"
                    }
                }
            }
        },
        "api.PersonEnriched": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "gender": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nationality": {
                    "type": "string"
                },
                "patronymic": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "api.PersonReq": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "patronymic": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "api.SuccessResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "db.Person": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nationality": {
                    "type": "string"
                },
                "patronymic": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        }
    }
}